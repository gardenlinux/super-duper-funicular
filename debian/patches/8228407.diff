
# HG changeset patch
# User ccheung
# Date 1564075552 25200
# Node ID 1edf6cc224fbf975eadf2a1810f67816a8607d30
# Parent  73dbc713d4ddbdbeae71375db1603d85cef47f99
8228407: JVM crashes with shared archive file mismatch
Summary: Stop processing other header fields if initial header check has failed.
Reviewed-by: dholmes, jiangli

--- a/src/hotspot/share/memory/filemap.cpp
+++ b/src/hotspot/share/memory/filemap.cpp
@@ -1287,7 +1287,9 @@ bool FileMapInfo::initialize() {
   }
 
   init_from_file(_fd);
-  if (!validate_header()) {
+  // UseSharedSpaces could be disabled if the checking of some of the header fields in
+  // init_from_file has failed.
+  if (!UseSharedSpaces || !validate_header()) {
     return false;
   }
   return true;
--- a/test/hotspot/jtreg/runtime/appcds/SharedArchiveConsistency.java
+++ b/test/hotspot/jtreg/runtime/appcds/SharedArchiveConsistency.java
@@ -385,8 +385,16 @@ public class SharedArchiveConsistency {
         output.shouldNotContain("Checksum verification failed");
 
         copyFile(orgJsaFile, jsa);
+        // modify _jvm_ident and run with -Xshare:auto
+        System.out.println("\n2b. Corrupt _jvm_ident run with -Xshare:auto\n");
+        modifyJvmIdent();
+        output = TestCommon.execAuto(execArgs);
+        output.shouldContain("The shared archive file was created by a different version or build of HotSpot");
+        output.shouldContain("Hello World");
+
+        copyFile(orgJsaFile, jsa);
         // modify _magic and _paths_misc_info_size, test should fail
-        System.out.println("\n2b. Corrupt _magic and _paths_misc_info_size, should fail\n");
+        System.out.println("\n2c. Corrupt _magic and _paths_misc_info_size, should fail\n");
         modifyHeaderIntField(offset_magic, 0x00000000);
         modifyHeaderIntField(offset_paths_misc_info_size, Integer.MAX_VALUE);
         output = TestCommon.execCommon(execArgs);
@@ -395,7 +403,7 @@ public class SharedArchiveConsistency {
 
         copyFile(orgJsaFile, jsa);
         // modify _version and _paths_misc_info_size, test should fail
-        System.out.println("\n2c. Corrupt _version and _paths_misc_info_size, should fail\n");
+        System.out.println("\n2d. Corrupt _version and _paths_misc_info_size, should fail\n");
         modifyHeaderIntField(offset_version, 0x00000000);
         modifyHeaderIntField(offset_paths_misc_info_size, Integer.MAX_VALUE);
         output = TestCommon.execCommon(execArgs);
